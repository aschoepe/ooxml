# Makefile.in --
#
#	If ths is "Makefile.in" then it is a template for a Makefile;  to generate 
#	the actual Makefile, run "./configure", which is a configuration script
#	generated by the "autoconf" program (constructs like "@foo@" will get
#	replaced in the actual Makefile.
#
# Copyright (C) 2019 Alexander Schoepe, Bochum, DE
#

#========================================================================
# Nothing of the variables below this line need to be changed.
#========================================================================

SHELL		= @SHELL@

srcdir		= @srcdir@
top_srcdir	= @top_srcdir@
prefix		= @prefix@
exec_prefix	= @exec_prefix@
datarootdir	= @datarootdir@
libdir		= @libdir@
mandir		= @mandir@
bindir		= @bindir@

DESTDIR		=
pkglibdir	= $(libdir)/@PACKAGE_NAME@@PACKAGE_VERSION@
top_builddir	= @abs_top_builddir@

PACKAGE_NAME	= @PACKAGE_NAME@
PACKAGE_VERSION	= @PACKAGE_VERSION@
CYGPATH		= @CYGPATH@

#========================================================================
# TCLLIBPATH seeds the auto_path in Tcl's init.tcl so we can test our
# package without installing.  The other environment variables allow us
# to test against an uninstalled Tcl.  Add special env vars that you
# require for testing here (like TCLX_LIBRARY).
#========================================================================

TCL_BIN_DIR	= @TCL_BIN_DIR@
TCL_SRC_DIR	= @TCL_SRC_DIR@
EXTRA_PATH	= $(top_builddir):$(TCL_BIN_DIR)
TCLLIBPATH	= $(top_builddir)
TCLSH_ENV	= TCL_LIBRARY=`@CYGPATH@ $(TCL_SRC_DIR)/library`
PKG_ENV		= LD_LIBRARY_PATH="$(EXTRA_PATH):$(@LD_LIBRARY_PATH_VAR@)" \
		  PATH="$(EXTRA_PATH):$(PATH)" \
		  TCLLIBPATH="$(TCLLIBPATH)"

TCLSH_PROG	= @TCLSH_PROG@
TCLSH   	= $(PKG_ENV) $(TCLSH_ENV) $(TCLSH_PROG)

PKG_TCL_SOURCES	= @PKG_TCL_SOURCES@ manifest.txt

CONFIG_CLEAN_FILES = Makefile pkgIndex.tcl manifest.txt
CLEANFILES	= @CLEANFILES@

#========================================================================
# Start of user-definable TARGETS section
#========================================================================

manifest.txt: manifest manifest.uuid tools/mkversion.tcl
	$(TCLSH) tools/mkversion.tcl > $@

doc/ooxml.html: doc/ooxml.md
	pandoc -f markdown -t html doc/ooxml.md -o doc/ooxml.html

doc/ooxml.n: doc/ooxml.md
	pandoc --standalone -f markdown -t man doc/ooxml.md -o doc/ooxml.n

doc: doc/ooxml.html doc/ooxml.n

all: manifest.txt doc/ooxml.html doc/ooxml.n

install: all
	$(TCLSH) `@CYGPATH@ $(srcdir)/helper.tcl` cp $(PKG_TCL_SOURCES) pkgIndex.tcl $(pkglibdir)

test:
	$(TCLSH) `@CYGPATH@ $(srcdir)/tests/all.tcl` $(TESTFLAGS) \
	  -load "package ifneeded ${PACKAGE_NAME} ${PACKAGE_VERSION} [list source [file join `@CYGPATH@ $(srcdir)` $(PACKAGE_NAME).tcl]]"

archive:
	sh tools/archive.sh @PACKAGE_NAME@ @PACKAGE_VERSION@ $(PKG_TCL_SOURCES)

clean:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)
	-rm -rf doc/ooxml.html doc/ooxml.n

distclean: clean
	-rm -f $(CONFIG_CLEAN_FILES)
	-rm -rf autom4te.cache
	-rm -f config.cache config.log config.status

.PHONY: install test clean distclean
