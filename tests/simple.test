#
# Commands covered: simple excel sheet
#

#
# (c) 2019 Alexander Schoepe
#
# See the file "license.terms" for information on usage and redistribution
# of this file, and for a DISCLAIMER OF ALL WARRANTIES.
#

if {[lsearch [namespace children] ::tcltest] == -1} {
  package require tcltest 2
  namespace import -force ::tcltest::*
  loadTestedCommands
}


package require ooxml


test SimpleExcel-1.1 {Write Simple Excel Sheet} {
  set spreadsheet [::ooxml::xl_write new -creator {User A} -created {2019-10-31 15:10:23} -modifiedby {User B} -modified {2019-10-31 15:10:23} -application {Tcl Test}]
  if {[set sheet [$spreadsheet worksheet {Sheet 1}]] > -1} {
    $spreadsheet cell $sheet {Tcl Test - SimpleExcel} -index A1
    $spreadsheet write simple.xlsx
  }
  $spreadsheet destroy

  return [file exists simple.xlsx]
} 1


test SimpleExcel-1.2 {Read Simple Excel Sheet} {
  array set workbook [ooxml::xl_read simple.xlsx]
  #parray workbook
  return $workbook(0,c,0,0)
} A1

test SimpleExcel-1.3 {Read Simple Excel and Check App, User, DateTime} {
  package require vfs::zip
  set mnt [vfs::zip::Mount simple.xlsx xlsx]

  # docProps/app.xml # Properties: Application
  set fd [open xlsx/docProps/app.xml r]
  fconfigure $fd -encoding utf-8
  set doc [dom parse [read $fd]]
  close $fd

  set root [$doc documentElement]
  $doc selectNodesNamespaces [list X [$root namespaceURI]]
  # ...
  $doc delete

  # docProps/core.xml # cp:coreProperties: dc:creator, cp:lastModifiedBy, dcterms:created and dcterms:modified
  set fd [open xlsx/docProps/app.xml r]
  fconfigure $fd -encoding utf-8
  set doc [dom parse [read $fd]]
  close $fd

  set root [$doc documentElement]
  # ...
  $doc delete

  vfs::zip::Unmount $mnt xlsx

  return 0
} 0


#file delete -force simple.xlsx


# cleanup
::tcltest::cleanupTests
return

